package POJOS;
// Generated 23-abr-2020 19:09:23 by Hibernate Tools 4.3.1


import java.io.UnsupportedEncodingException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * Empleado generated by hbm2java
 */
public class Empleado  implements java.io.Serializable {


     private Integer id;
     private Departamento departamento;
     private byte[] codigo;
     private String nif;
     private String password;
     private String apellidos;
     private String nombre;
     private String profesion;
     private Double salario;
     private Date fechaNac;
     private Date fechaIng;

    public Empleado() {
    }

    public Empleado(String nif, String nombre) {
        this.nif = nif;
        this.nombre = nombre;
    }

   

    
    public Empleado(byte[] codigo, String nif, String password, String apellidos, String nombre, String profesion, Double salario, Date fechaNac, Date fechaIng) {
        this.codigo = codigo;
        this.nif = nif;
        this.password = password;
        this.apellidos = apellidos;
        this.nombre = nombre;
        this.profesion = profesion;
        this.salario = salario;
        this.fechaNac = fechaNac;
        this.fechaIng = fechaIng;
    }

	
    public Empleado(byte[] codigo, String nif, String password, String apellidos, String nombre, String profesion, Date fechaNac, Date fechaIng) {
        this.codigo = codigo;
        this.nif = nif;
        this.password = password;
        this.apellidos = apellidos;
        this.nombre = nombre;
        this.profesion = profesion;
        this.fechaNac = fechaNac;
        this.fechaIng = fechaIng;
    }
    public Empleado(Departamento departamento, byte[] codigo, String nif, String password, String apellidos, String nombre, String profesion, Double salario, Date fechaNac, Date fechaIng) {
       this.departamento = departamento;
       this.codigo = codigo;
       this.nif = nif;
       this.password = password;
       this.apellidos = apellidos;
       this.nombre = nombre;
       this.profesion = profesion;
       this.salario = salario;
       this.fechaNac = fechaNac;
       this.fechaIng = fechaIng;
    }
   
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }
    public Departamento getDepartamento() {
        return this.departamento;
    }
    
    public void setDepartamento(Departamento departamento) {
        this.departamento = departamento;
    }
    public byte[] getCodigo() {
        return this.codigo;
    }
    
    public void setCodigo(byte[] codigo) {
        this.codigo = codigo;
    }
    public String getNif() {
        return this.nif;
    }
    
    public void setNif(String nif) {
        this.nif = nif;
    }
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }
    public String getApellidos() {
        return this.apellidos;
    }
    
    public void setApellidos(String apellidos) {
        this.apellidos = apellidos;
    }
    public String getNombre() {
        return this.nombre;
    }
    
    public void setNombre(String nombre) {
        this.nombre = nombre;
    }
    public String getProfesion() {
        return this.profesion;
    }
    
    public void setProfesion(String profesion) {
        this.profesion = profesion;
    }
    public Double getSalario() {
        return this.salario;
    }
    
    public void setSalario(Double salario) {
        this.salario = salario;
    }
    public Date getFechaNac() {
        return this.fechaNac;
    }
    
    public void setFechaNac(Date fechaNac) {
        this.fechaNac = fechaNac;
    }
    public Date getFechaIng() {
        return this.fechaIng;
    }
    
    public void setFechaIng(Date fechaIng) {
        this.fechaIng = fechaIng;
    }
@Override
    public String toString() {
        String codigo = null;
        try {
            codigo = new String(this.getCodigo(), "UTF-8");
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Empleado.class.getName()).log(Level.SEVERE, null, ex);
        }
        return "Empleado{" + "id=" + id + ", departamento=" + departamento.getId() + ", codigo=" + codigo + ", nif=" + nif + ", password=" + password + ", apellidos=" + apellidos + ", nombre=" + nombre + ", profesion=" + profesion + ", salario=" + salario + ", fechaNac=" + fechaNac + ", fechaIng=" + fechaIng + '}';
    }



}


